<!DOCTYPE html>
<html xmlns:ng="http://angularjs.org" lang="en">
<head><% include ../partials/head %>
</head>
<body class="container" ng-app="zentoo">

	<header> <% include ../partials/header %> </header>

	<main style="text-align:center;">
		<% if ( template === "reviews") { %>
			<% include ../partials/reviews %>
		<% } else if ( template === "businesses" ) { %>
			<% include ../partials/businesses_elastic %>
		<% } %>
	</main>

	<footer> <% include ../partials/footer %> </footer>
	<script
		src="https://ajax.googleapis.com/ajax/libs/angularjs/1.2.25/angular.min.js"></script>
	<script>
		// Module
		angular.module('zentoo', [])

		// Service
		.factory('Reviews', [ '$http', function($http) {
			var reviewService = {};
			reviewService.top10 = $http.get('/api/reviews');
			return reviewService;
		} ])

		.factory('Businesses', [ '$http', function($http) {
			var businessService = {};
			$http.defaults.headers.post["Content-Type"] = "application/x-www-form-urlencoded";
			businessService.top10 = $http.get('/api/businesses');
		    var jsonToURLEncoding = function(obj) {
		        var str = [];
		        for(var p in obj)
		        str.push(encodeURIComponent(p) + "=" + encodeURIComponent(obj[p]));
		        return str.join("&");
		    }
			businessService.search = function(criteria) {
				// Make the string URL friendly.
				var criteria_friendly = jsonToURLEncoding({ "search" : criteria });
				return $http.post('/api/businesses/', criteria_friendly );
 			};
			return businessService;
		} ])

		.factory('Utils', [ function() {
			var utils = {};
			utils.trimLongString = function(obj) {
				var string = JSON.stringify(obj);
				if (string.length > 25) {
					string = string.substring(0, 24) + "...";
				}
				return string;
			};
			return utils;
		} ])

		// Controller
		.controller(
				'ZentooController',
				[
						'$scope',
						'Businesses',
						'Reviews',
						'Utils',
						'$timeout',
						function($scope, Businesses, Reviews, Utils, $timeout) {
							$scope.empty = false; // means result is empty
							$scope.waiting = false; // means we are waiting for somthing from the server.
							$scope.trimLongString = Utils.trimLongString;
							
							var success = function (data) {
								if (data.length == 0) {
									$scope.empty = true;
								} else {
									$scope.empty = false;
								}
								$scope.businesses = data;
								$scope.waiting = false;
							};
							
							var error = function (data, status) {
								console.log(data, status);
								$scope.businesses = [];
								$scope.empty = false;
								$scope.waiting = false;
							};
							
							var searchFunction = function() {
								// Empty the output, wait for updated output to come.
								$scope.businesses = [];
								$scope.empty = false;
								$scope.waiting = true;
								Businesses.search($scope.newValue)
									.success(success)
									.error(error);
							}
							
							$scope.$watch('search_businesses', function(
									newValue, oldValue) {
								
								if (!newValue || newValue.length == 0) {
									// Do noting if string is empty.	
								} else {
									// Locking to avoid too many requests to be sent to the server.
									$scope.newValue = newValue; //record change.
									if ($scope.searchPromise)
										$timeout.cancel($scope.searchPromise);
									$scope.searchPromise = $timeout(searchFunction, 250);
 								}
							});
						} ]);
	</script>
</body>
</html>